name: Test

on:
  push:
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install Zig toolchain
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.10.0

      - name: Install Cargo Lambda
        uses: jaxxstorm/action-install-gh-release@v1.9.0
        with:
          repo: cargo-lambda/cargo-lambda
          tag: v0.14.0 
          platform: linux 
          arch: x86_64
 
      - name: Run unit tests 
        run: cargo test --bins

      - name: Package
        run: cargo lambda build --release --output-format zip

      - name: Install serverless framework
        run: npm install -g serverless

      - name: Deploy
        run: |
          AWS_REGION=us-east-2 serverless deploy
          URL=$(AWS_REGION=east-2 serverless info --verbose 2>/dev/null | grep ServiceEndpoint | sed s/ServiceEndpoint\:\ //g | awk '{print $1}')
          echo "URL=$URL" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2

      - name: Run integration tests 
        run: cargo test --test '*' -- --nocapture
        env:
          URL: ${{ env.URL }}

      - name: Destroy
        run: AWS_REGION=east-2 serverless remove
        if: always()
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-2

      - name: Deploy
        run: AWS_REGION=east-1 serverless deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-east-1